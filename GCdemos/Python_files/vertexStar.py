import numpy as np
import pyvista as pv

xyz_poly_coefs = (
                  np.array([
                    [[8/5, -127/9, -23/9, 0, 0], [17419/315, -1067/45, 3, 10/9, 0], [31037/315, 15238/45, 5/4, 0, 0], [0, -63019/315, 0, 0, 0], [0, 0, 0, 0, 0]],
                    [[1/5, -25/2, -5/2, 0, 0], [1501/90, -45/2, 1/2, 2, 0], [1481/45, 1712/15, 7/9, 0, 0], [0, -3016/45, 0, 0, 0], [0, 0, 0, 0, 0]],
                    [[9/10, -481/35, -94/35, 0, 0], [22121/840, -1054/35, 2, 18/7, 0], [833/15, 161951/840, 10/9, 0, 0], [0, -1684/15, 0, 0, 0], [0, 0, 0, 0, 0]],
                    ]).transpose(1,2,0),

                  np.array([
                    [[8/5, 17419/315, 31037/315, 0, 0], [-12974/315, -6589/105, 1/5, 3, 0], [-91/9, 1/7, 1/6, 0, 0], [0, 20/9, 0, 0, 0], [0, 0, 0, 0, 0]],
                    [[1/5, 1501/90, 1481/45, 0, 0], [-188/45, -299/30, 5/6, 6/5, 0], [-4/9, 7/5, 2/5, 0, 0], [0, 2/3, 0, 0, 0], [0, 0, 0, 0, 0]],
                    [[9/10, 22121/840, 833/15, 0, 0], [-1511/120, -1697/60, 3, 6/5, 0], [-49/20, 9/8, 9/2, 0, 0], [0, 9/2, 0, 0, 0], [0, 0, 0, 0, 0]],
                    ]).transpose(1,2,0),

                  np.array([
                    [[8/5, -12974/315, -91/9, 0, 0], [-127/9, 3/5, 3/5, 18, 0], [-23/9, 8/9, 7/4, 0, 0], [0, 4, 0, 0, 0], [0, 0, 0, 0, 0]],
                    [[1/5, -188/45, -4/9, 0, 0], [-25/2, 5/2, 1, 2/9, 0], [-5/2, 2, 2, 0, 0], [0, 3, 0, 0, 0], [0, 0, 0, 0, 0]],
                    [[9/10, -1511/120, -49/20, 0, 0], [-481/35, 8, 5/3, 2/5, 0], [-94/35, 1, 8/3, 0, 0], [0, 14/5, 0, 0, 0], [0, 0, 0, 0, 0]],
                    ]).transpose(1,2,0),

                  )
uv_ranges = [[[0, 1],[0, 1]]]*3

if __name__ == '__main__':
    pv.set_plot_theme('paraview')
    plotter = pv.Plotter()
    plotter.set_color_cycler([
        "#e60049", "#0bb4ff", "#50e991", "#e6d800", "#9b19f5", 
        "#ffa300", "#dc0ab4", "#b3d4ff", "#00bfa0"
        ])
    plotter.show_axes_all()
    plotter.show_grid()
    plotter.enable_anti_aliasing()

    for (u_range,v_range),coefs in zip(uv_ranges, xyz_poly_coefs): 
        u = np.linspace(u_range[0], u_range[1], 20)
        v = np.linspace(v_range[0], v_range[1], 20)
        value = np.polynomial.polynomial.polygrid2d(u, v, coefs)

        mesh = pv.StructuredGrid(value[0], value[1], value[2])   
        plotter.add_mesh(mesh, smooth_shading=True, split_sharp_edges=True)

    plotter.show()
